import logging\n\nfrom gatox.github.api import Api\nfrom gatox.models.repository import Repository\nfrom gatox.models.organization import Organization\nfrom gatox.cli.output import Output\nfrom gatox.enumerate.repository import RepositoryEnum\nfrom gatox.enumerate.organization import OrganizationEnum\nfrom gatox.enumerate.recommender import Recommender\nfrom gatox.caching.cache_manager import CacheManager\n\nlogger = logging.getLogger(__name__)\n\nclass Enumerator:\n    def __init__(self, pat: str, socks_proxy: str = None, http_proxy: str = None, output_yaml: str = None, skip_log: bool = False, github_url: str = None, output_json: str = None):\n        self.api = Api(pat, socks_proxy=socks_proxy, http_proxy=http_proxy, github_url=github_url)\n        self.skip_log = skip_log\n        self.output_yaml = output_yaml\n        self.user_perms = None\n        self.repo_e = RepositoryEnum(self.api, skip_log, output_yaml)\n        self.org_e = OrganizationEnum(self.api)\n\n    def __setup_user_info(self):\n        if not self.user_perms:\n            self.user_perms = self.api.check_user()\n            if not self.user_perms:\n                Output.error(\