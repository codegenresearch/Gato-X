import logging\nfrom pathlib import Path\nimport os\nimport re\n\nfrom gatox.configuration.configuration_manager import ConfigurationManager\nfrom gatox.workflow_parser.utility import filter_tokens, decompose_action_ref\nfrom gatox.workflow_parser.components.job import Job\nfrom gatox.models.workflow import Workflow\n\nlogger = logging.getLogger(__name__)\n\nclass WorkflowParser():\n    """Parser for YML files.\n\n    This class is structured to take a yaml file as input, it will then\n    expose methods that aim to answer questions about the yaml file.\n\n    This will allow for growing what kind of analytics this tool can perform\n    as the project grows in capability.\n\n    This class should only perform static analysis. The caller is responsible for \n    performing any API queries to augment the analysis.\n    """\n\n    LARGER_RUNNER_REGEX_LIST = re.compile(r'(windows|ubuntu)-(22.04|20.04|2019-2022)-(4|8|16|32|64)core-(16|32|64|128|256)gb')\n    MATRIX_KEY_EXTRACTION_REGEX = re.compile(r'{{\s*matrix\.([\