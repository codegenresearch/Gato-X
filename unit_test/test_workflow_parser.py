import pytest\nimport os\nimport pathlib\n\nfrom unittest.mock import patch, ANY, mock_open\n\nfrom gatox.workflow_parser.workflow_parser import WorkflowParser\nfrom gatox.models.workflow import Workflow\nfrom gatox.workflow_parser.utility import check_sus\n\nTEST_WF = '''\nname: 'Test WF'\n\non:\n  pull_request_target:\n  workflow_dispatch:\n\njobs:\n  test:\n    runs-on: ['self-hosted']\n    steps:\n\n    - name: Execution\n      run: |\n          echo \\"Hello World and bad stuff!\\"\n'''\n\nTEST_WF2 = '''\nname: 'Test WF2'\n\non:\n  pull_request_target:\n\njobs:\n  test:\n    runs-on: 'ubuntu-latest'\n    steps:\n    - name: Execution\n      uses: actions/checkout@v4\n      with:\n        ref: ${{ github.event.pull_request.head.ref }}\n'''\n\nTEST_WF3 = '''\nname: Update Snapshots\non:\n  issue_comment:\n    types: [created]\njobs:\n  updatesnapshots:\n    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/update-snapshots'}}\n    timeout-minutes: 20\n    runs-on: macos-latest\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          fetch-depth: 0\n          token: ${{ secrets.GITHUB_TOKEN }}\n      - name: Get SHA and branch name\n        id: get-branch-and-sha\n        run: |\n          sha_and_branch=$(\n            curl \n              -H 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \\